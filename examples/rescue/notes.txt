REST-API of RESCUE
/*{{{*/
www.myuri.com/
			riddl	none				desrciption			return the desription-file of RESCUE to describe itself

www.myuri.com/groups
			GET	none				list-of-groups			return an ATOM-feed containign a list with all groups
			POST	create-group			none				create a new group with name and properties given in create-group

www.myuri.com/count	
			GET	none				count-entries			number of groups

www.myuri.com/groups/{group}
			GET	none				list-of-subgroups		returns an ATOM-feed with all contained subgroups
			GET	properties			group-properties		a XML with the properties of the group according to the RNG
			GET	white-information-request	white-information-response	return the RNG of the service-detials; information each service must provide within rescue
			DELETE 	none				none				delete group
			PUT	update-group			none				update group to name and properties given in update-group
			POST	create-subgroup			none				create a subgroup with name and properties given in create-sungroup

www.myuri.com/groups/{group}/{operation}
			GET	none				message-defintion		a RNG which defines the structure of the input and the output message for the given operation (operation could only be create, read, update or delete)

www.myuri.com/groups/{group}/count
			GET	none				count-entries

www.myuri.com/groups/{group}/{subgroup}
			GET	none				list-of-services		return an ATOM-feed with contained services
			PUT	update-sungroup			none				update subgroup to name 
			POST	create-service			none				create a new service with name and properties given in ceate-service
			DELETE	none				none				delete subgroup
www.myuri.com/groups/{group}/{subgroup}/count
			GET	none				count-entries			number og contained services in the subgroup

www.myuri.com/groups/{group}/subgroup}/{service}
			GET	none				service-details			a XML with the detail of the service according to the RNG
			PUT	update-service			none				updates service with properties given in update-service
			DELETE	none				none				delete service

/*}}}*/

Implementation Notes
/*{{{*/
4 methods cover every busines-case; crud; fits well into rest;
supporting pre und post execution will allow more complex tasks to be offered as one service;
parameter-names needs to be unique within each group (inculding pre and post processing);
output-parameters of pre-processing services will be added to the message sent to the actual service and also each following-sibling of pre-processing's;
output-parameters are discarded after excution;
/*}}}*/


Description of group-properties.rng
/*{{{*/
/*}}}*/

Motivation
/*{{{*/

/*}}}*/
