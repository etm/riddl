<controlflow xmlns="http://rescue.org/ns/controlflow/0.2" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <context id="string">'some string is here'</context>
  <context id="number">4711</context>
  <context id="boolean">true</context>
  <context id="class_date">Date.new("2001-12-24")</context>
  <context id="pattern_context">'this-is-a-pattern'</context>
  <context id="some_context"/>
  <context id="an_other_context"/>

  <endpoint id="wo_pattern">http://no-patterns-needed.org/service</endpoint>
  <endpoint id="with_pattern">http://here-is-a-pattern-used.org/#{@pattern_context}/some-uri-parts</endpoint>

  <cycle id="cyc_01">
    <condition test="cyc_01_iterator" comparator="&lt;" fix-value="5"/>
    <iterated-context id="iterated_context"/>
    <iterated-context id="iterated_context_with_class">Time.new(@number)</iterated-context>
    <parallel type="nowait">
      <branch>
        <call id="call_01" endpoint="wo_pattern" service-operation="so_1" state-controlflow="execute">
          <constraint xpath="//some_property" comparator="==" fix-value="Time.new('20:15')"/>
          <constraint xpath="/some_group/some_other_property" comparator="!=" variable="iterated_context"/>
          <constraint xpath="//some_group/#{@string}" comparator="!=" variable="wo_pattern"/>
          <input name="in_context" context="string"/>
          <input name="in_fix_num" fix-value="5"/>
          <input name="in_fix_string" fix-value="&quot;some input&quot;"/>
          <input name="in_fix_boolean" fix-value="true"/>
          <input name="in_call" context="class_date.day()"/>
          <output name="properties" xpath="/properties/some_property" context="some_prop_context"/>
          <output name="out6" context="iterated_context"/>
          <output name="out" context="iterated_context"/>
          <output name="out3" context="iterated_context"/>
          <output name="out" context="iterated_context"/>
          <output name="out2" context="iterated_context"/>
          <output name="out4" context="iterated_context"/>
          <output name="out2" context="iterated_context"/>
          <output name="out5" context="iterated_context"/>
        </call>
      </branch>
      <branch>
        <critical id="crit_01">
          <call id="call_02" endpoint="with_pattern" http-method="get" http-status="200">
            <input name="xml" message-parameter="xml_context">
              <xsl:template match="/">
                <xsl:apply-templates select="//items"/> 
              </xsl:template>
              <xsl:template match="//items">
                <xsl:element name="entry">
                  <xsl:value-of select="text"/>
                </xsl:element>
              </xsl:template>
            </input>
            <output name="out" message-parameter="message_out_02">
              <xsl:template match="/">
                <xsl:apply-templates select="//results"/> 
              </xsl:template>
              <xsl:template match="//results">
                <xsl:element name="result">
                  <xsl:value-of select="text"/>
                </xsl:element>
              </xsl:template>
            </output>
            <output name="out" message-parameter="message_out_0333" xpath="//results/vendor/text()"/>
            <output message-parameter="message_out_03" context="iterated_context"/>
            <output message-parameter="message_out_04" fix-value="false"/>
          </call>
        </critical>
      </branch>
    </parallel>
    <manipulate id="man_01" target="iterated_context" operator="+=" variable="some_context"/>
    <manipulate id="man_01" target="some_context" operator="-=" fix-value="Date.new(@some_context)"/>
    <manipulate id="man_01" target="with_pattern" operator="some_operation=" variable="some_context"/>
    <manipulate id="man_02" target="some_context" operator="some_operation" variable="some_context.some_method(@some_context)">
      <xsl:template match="/">
        <xsl:apply-templates select="//results"/> 
      </xsl:template>
      <xsl:template match="//results">
        <xsl:element name="result">
          <xsl:value-of select="text"/>
        </xsl:element>
      </xsl:template>
    </manipulate>
  </cycle>
  <choose>
    <alternative>
      <group connector="and">
        <condition test="some_context" comparator="&gt;=" fix-value="5"/>
        <group connector="or">
          <condition test="an_other_context" comparator="==" variable="some_context"/>
          <condition test="an_other_context" comparator="substring" fix-value="Date.new(@class_date)"/>
        </group>
      </group>
      <manipulate id="man_03" target="some_context" operator="+=" variable="an_other_context" xpath="//something/some"/>
    </alternative>
    <otherwise>
      <manipulate id="man_04" target="some_context" operator="+=" variable="an_other_context" xpath="//something/some"/>
    </otherwise>
  </choose>
</controlflow>
