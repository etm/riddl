<?xml version="1.0"?>
<grammar  xmlns="http://relaxng.org/ns/structure/1.0"
          xmlns:rng="http://relaxng.org/ns/structure/1.0"
          xmlns:flow="http://rescue.org/ns/controlflow/0.2"
          datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">


<start combine="choice">
  <element name="flow:execution-plan">
    <ref name="execution-code"/>
  </element>
</start>

<define name="context">
  <element name="flow:context">
    <attribute name="id"/>
    <text/>
  </element> 
</define>

<define name="constraint">
  <element name="constraint"> 
    <attribute name="property"/>
    <attribute name="comparator"/>
    <choice>
      <attribute name="context"/>
      <group>
        <attribute name="call-id"/>
        <attribute name="referred-property"/>
      </group>
    </choice>
  </element>
</define>

<!-- Define differen call-types: class-method, selection, particular and multiple -->
<!-- {{{ --> 
<define name="call">
  <element name="flow:call">
    <attribute name="id"/>
    <attribute name="endpoint"/>
    <choice>
      <attribute name="service-operation"/>
      <attribute name="http-method"><!-- defualt will be get -->
        <choice>
          <value>get</value>
          <value>post</value>
          <value>put</value>
          <value>delete</value>
        </choice>
      </attribute>
      <attribute name="state-controlflow"/>
    </choice>
    <optional>
      <attribute name="group-by"/> <!-- Itempath holds the xpath to be used for generating the oportunities out of the input-message -->
      <element name="flow:resource-id"> <!-- the uri of the resource from where the output was selected -->
        <attribute name="xpath"/>
        <attribute name="endpoint"/>
      </element>
    </optional>
    <optional>
      <zeroOrMore>
        <ref name="constraint"/>
      </zeroOrMore>
    </optional>
    <ref name="in-out"/>
  </element>
</define>
<!-- }}} -->


<!-- Define input and output -->
<!-- {{{ -->
<define name="in-out">
  <zeroOrMore>
    <element name="flow:input">
      <choice>
        <attribute name="message"/>
        <group>
          <attribute name="name"/>
          <choice>
            <attribute name="context"/>
            <attribute name="message-parameter"/>
          </choice>
        </group>
      </choice>
    </element>
  </zeroOrMore>
  <zeroOrMore>
    <element name="flow:output">
      <choice>
        <attribute name="message"/>
        <group>
          <attribute name="name"/>
          <choice>
            <attribute name="context"/>
            <attribute name="message-parameter"/>
          </choice>
        </group>
        <group>
          <attribute name="context"/>
          <attribute name="message-parameter"/>
        </group>
      </choice>
    </element>
  </zeroOrMore>
</define>
<!-- }}} -->

<define name="endpoint">
  <element name="flow:endpoint">
    <attribute name="id"/>
    <text/>
  </element>
</define>

<define name="execution-code">
  <zeroOrMore>
    <choice>
      <ref name="context"/>
      <ref name="call"/>
      <ref name="endpoint"/>
    </choice>
  </zeroOrMore>
</define>

</grammar>
