<?xml version="1.0"?>
<grammar xmlns="http://relaxng.org/ns/structure/1.0" xmlns:service="http://rescue.org/ns/service/0.2" xmlns:flow="http://rescue.org/ns/controlflow/0.2" xmlns:rng="http://relaxng.org/ns/structure/1.0" xmlns:domain="http://rescue.org/ns/domain/0.2" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"><define name="controlflow-code">
  <zeroOrMore>
    <choice>
      <ref name="endpoint"/>
      <ref name="context"/>
      <ref name="manipulate"/>
      <ref name="call"/>
      <ref name="cycle"/>
      <ref name="parallel"/>
      <ref name="choose"/>
      <ref name="critical"/>
    </choice>
  </zeroOrMore>
</define><define name="condition">
<!-- {{{ --> 
  <choice>
    <element name="flow:condition">
      <attribute name="test"/>
      <attribute name="operator"/>
      <choice>
        <attribute name="variable"/> <!-- could be context or endpoint -->
        <attribute name="fix-value"/>
      </choice>
    </element>
    <element name="flow:group">
      <attribute name="operator"/>
      <ref name="condition"/> <!-- at least two conditions must be member of a group -->
      <oneOrMore>
        <ref name="condition"/>
      </oneOrMore>
    </element>
  </choice>
<!-- }}} -->
</define><define name="choose">
<!-- {{{ --> 
  <element name="flow:choose">
    <oneOrMore>
      <element name="flow:alternative">
        <ref name="condition"/>
        <ref name="controlflow-code"/>
      </element>
    </oneOrMore>
    <optional>
      <element name="flow:otherwise">
        <ref name="controlflow-code"/>
      </element>
    </optional>
  </element>
<!-- }}} -->
</define><define name="parallel">
<!-- {{{ --> 
  <element name="flow:parallel">
    <attribute name="type">
      <choice>
        <value>wait</value>
        <value>nowait</value>
      </choice>
    </attribute>
    <oneOrMore>
      <element name="flow:branch">
        <ref name="controlflow-code"/>
      </element>
    </oneOrMore>
  </element>
<!-- }}} -->
</define><define name="critical">
<!-- {{{ --> 
  <element name="flow:critical">
    <attribute name="id"/>
    <ref name="controlflow-code"/>
  </element>
<!-- }}} -->
</define><define name="cycle">
<!-- {{{ --> 
  <element name="flow:cycle">
    <attribute name="id"/>
    <ref name="condition"/>
    <ref name="controlflow-code"/>
  </element>
<!-- }}} -->
</define><define name="manipulate">
<!-- {{{ --> 
  <element name="flow:manipulate">
    <attribute name="id"/>
    <attribute name="target"/>
    <attribute name="operator"/> <!-- should also be able to interprete RegExp -->
    <choice>
      <attribute name="variable"/>
      <attribute name="fix-value"/>
      <attribute name="parameter-name"/>
    </choice>
  </element>
<!-- }}} -->
</define><define name="context">
<!-- {{{ --> 
  <element name="flow:context">
    <attribute name="id"/>
    <text/>
  </element> 
<!-- }}} -->
</define><define name="constraint">
<!-- {{{ --> 
  <element name="constraint"> 
    <attribute name="property"/>
    <attribute name="comparator"/>
    <choice>
      <attribute name="context"/>
      <group>
        <attribute name="call-id"/>
        <attribute name="referred-property"/>
      </group>
    </choice>
  </element>
<!-- }}} -->
</define><define name="call">
<!-- {{{ --> 
  <element name="flow:call">
    <attribute name="id"/>
    <attribute name="endpoint"/>
    <choice>
      <group>
        <attribute name="service-operation"/>
        <attribute name="state-controlflow"/>
      </group>
      <group>
        <attribute name="http-method">
          <choice>
            <value>get</value>
            <value>post</value>
            <value>put</value>
            <value>delete</value>
          </choice>
        </attribute>
        <attribute name="http-status"/>
      </group>
    </choice>
    <optional>
      <attribute name="group-by"/> <!-- holds the xpath to be used for generating the oportunities out of the input-message -->
      <element name="flow:resource-id"> <!-- selector and target for the resource from which the output was selected -->
        <attribute name="xpath"/>
        <attribute name="endpoint"/>
      </element>
    </optional>
    <optional>
      <zeroOrMore>
        <ref name="constraint"/>
      </zeroOrMore>
    </optional>
    <ref name="in-out"/>
  </element>
<!-- }}} -->
</define><define name="in-out">
<!-- {{{ -->
  <zeroOrMore>
    <element name="flow:input">
      <choice>
        <attribute name="message"/>
        <group>
          <attribute name="name"/>
          <choice>
            <attribute name="context"/>
            <attribute name="message-parameter"/>
          </choice>
        </group>
      </choice>
    </element>
  </zeroOrMore>
  <zeroOrMore>
    <element name="flow:output">
      <choice>
        <attribute name="message"/>
        <group>
          <attribute name="name"/>
          <choice>
            <attribute name="context"/>
            <attribute name="message-parameter"/>
          </choice>
        </group>
        <group>
          <attribute name="context"/>
          <attribute name="message-parameter"/>
        </group>
      </choice>
    </element>
  </zeroOrMore>
  <zeroOrMore>
    <ref name="manipulate"/>
  </zeroOrMore>
<!-- }}} -->
</define><define name="endpoint">
<!-- {{{ --> 
  <element name="flow:endpoint">
    <attribute name="id"/>
    <text/>
  </element>
<!-- }}} -->
</define>

<start><element name="service:service-description">
<element name="service:properties">
	<element name="service:longitude"><rng:data xmlns="http://rescue.org/ns/domain/0.2" type="positiveInteger"/></element>
	<element name="service:latitude"><rng:data xmlns="http://rescue.org/ns/domain/0.2" type="positiveInteger"/></element>
</element>
<element name="service:operations">
	<element name="service:search">
		<element name="service:execute"><ref name="controlflow-code"/></element>
		<element name="service:compensate"><ref name="controlflow-code"/></element>
		<element name="service:undo"><ref name="controlflow-code"/></element>
		<element name="service:redo"><ref name="controlflow-code"/></element>
		<element name="service:suspend"><ref name="controlflow-code"/></element>
		<element name="service:abort"><ref name="controlflow-code"/></element>
	</element>
	<element name="service:book">
		<element name="service:execute"><ref name="controlflow-code"/></element>
		<element name="service:compensate"><ref name="controlflow-code"/></element>
		<element name="service:undo"><ref name="controlflow-code"/></element>
		<element name="service:redo"><ref name="controlflow-code"/></element>
		<element name="service:suspend"><ref name="controlflow-code"/></element>
		<element name="service:abort"><ref name="controlflow-code"/></element>
	</element>
	<element name="service:popcorn">
		<element name="service:execute"><ref name="controlflow-code"/></element>
		<element name="service:compensate"><ref name="controlflow-code"/></element>
		<element name="service:undo"><ref name="controlflow-code"/></element>
		<element name="service:redo"><ref name="controlflow-code"/></element>
		<element name="service:suspend"><ref name="controlflow-code"/></element>
		<element name="service:abort"><ref name="controlflow-code"/></element>
	</element>
</element></element></start></grammar>
