<?xml version="1.0"?>
<grammar xmlns="http://relaxng.org/ns/structure/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes" ns="http://riddl.org/ns/datatypes/1.0">
  <define name="riddl-common-atts">
    <zeroOrMore>
      <attribute>
        <anyName>
          <except>
            <nsName/>
            <nsName ns=""/>
          </except>
        </anyName>
      </attribute>
    </zeroOrMore>
  </define>

  <define name="riddl-datatype-relpath">
    <data type="string">
      <param name="pattern">\c+(/\c+)*</param>
    </data>
  </define>
  <define name="riddl-datatype-relpathtemplate">
    <data type="string">
      <param name="pattern">(\c+|\{\})(/(\c+|\{\}))*</param>
    </data>
  </define>

  <define name="riddl-datatype-in-messagename">
    <data type="string">
      <param name="pattern">[a-z]\c*|\*</param>
    </data>
  </define>
  <define name="riddl-datatype-out-messagename">
    <data type="string">
      <param name="pattern">[a-z]\c*</param>
    </data>
  </define>
  
  <define name="riddl-datatype-rname">
    <data type="string">
      <param name="pattern">[a-z]\c*</param>
    </data>
  </define>

  <define name="riddl-occurs">
    <choice>
      <attribute name="occurs">
        <choice>
          <value>*</value>
          <value>?</value>
          <value>+</value>
          <value>first</value>
          <value>last</value>
        </choice>  
      </attribute>  
      <attribute name="occurs">
        <param name="pattern">(before|after)(_each)?\s+(\*|\?|\+|[a-z]\c+)</param>
      </attribute>
    </choice>
  </define>

</grammar>
